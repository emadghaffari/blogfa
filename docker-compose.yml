version: "3.7"

services:
  # auth service
  auth:
    build: ./auth
    volumes:
      - ./auth:/go/src/application
    networks:
      - backend
    depends_on:
      - jaeger

  # jaeger tracer
  jaeger:
    image: jaegertracing/all-in-one:1.20
    ports:
      - "1111:6831/udp"
      - "1112:16686"
    networks:
      - backend

  # etcd store node 1
  etcd1:
    image: bitnami/etcd:3.4.3
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd1
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    networks:
      - backend
  # etcd store node 2
  etcd2:
    image: bitnami/etcd:3.4.3
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd2
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd2:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd2:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    networks:
      - backend
  # etcd store node 3
  etcd3:
    image: bitnami/etcd:3.4.3
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd3
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd3:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd3:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    networks:
      - backend

  # -----------------------------
  # mysql database
  # -----------------------------
  db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: root
      MYSQL_DATABASE: blogfa
      MYSQL_PASSWORD: password
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD_FILE",
        ]
      interval: 20s
      timeout: 10s
      retries: 3
      # start_period: 40s
    volumes:
      - blogfa-db:/var/lib/mysql
    networks:
      - backend

  # -----------------------------
  # phpmyadmin
  # -----------------------------
  phpmyadmin:
    image: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_PASSWORD=password
      - PMA_USER=root
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 20s
      timeout: 10s
      retries: 3
      # start_period: 40s
    restart: always
    ports:
      - 9595:80
    volumes:
      - /sessions
    networks:
      - backend

  # -----------------------------
  # Infrastructure Visualization
  # -----------------------------
  scope:
    image: weaveworks/scope:1.13.1
    hostname: weave-scope
    pid: "host"
    privileged: true
    ports:
      - "4040:4040"
    expose:
      - "4040"
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker"
      - "true"
    networks:
      - backend

  # -----------------------------
  # nats message broker
  # -----------------------------
  nats:
    image: nats
    ports:
      - "8222:8222"
      - "4222:4222"
    networks:
      - backend

  # -----------------------------
  # redis database
  # -----------------------------
  redis:
    hostname: redis
    image: redis
    networks:
      - backend

  # -----------------------------
  # redis UI
  # -----------------------------
  redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "6546:8081"
    networks:
      - backend

networks:
  backend:
    name: backend

volumes:
  blogfa-db:
